@model ArduinoBot.Models.Command

@{
    Layout = null;
}

<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>Index</title>
</head>
<body>

    <link href="/content/themes/smoothness/jquery-ui-1.10.3.custom.css" rel="stylesheet" />

    <script src="~/Scripts/jquery-1.9.1.min.js"></script>


    @*    <script src="~/Scripts/jquery.jqGrid.src.js"></script>*@


    <script type="text/javascript">
        $(document).ready(function () {

            var lastResponseId = 0;
            var summResponcseRecords = 0;
            var timerIdResponcse = 0;
            var lockResponse = false;

            var lastCommandId = 0;
            var summCommanRecords = 0;
            var timerIdCommand = 0;
            var lockCommand = false;


            // ========================== Commands

            // configs
            var limitCommandTable = 100;
            var updateTimerCommand = 1000;
            //====

            function reloadCommands() {
                if (lockCommand == false) {
                    lockCommand = true;
                    var query = $.getJSON("/api/Command/Core/GetAllCommands/" + lastCommandId, function (result) {
                        $.each(result, function (i, command) {
                            $('#tbCommands tr:first').after('<tr><td>' + command.Id + '</td><td>' + command.TimeString + '</td><td>' + command.Cmd + '</td><td>' + command.Received + '</td><td>' + command.MsExTime + '</td></tr>');
                            if (lastCommandId < command.Id) lastCommandId = command.Id; // I will optimize it, i'm sure...
                            controllCommandList();
                        });
                    })
                    .complete(function () {
                        lockCommand = false;
                    });
                }
            }
            function controllCommandList() {
                summCommanRecords++;
                if (summCommanRecords > limitCommandTable) {
                    $('#tbCommands tr').last().remove();
                }
            }
            function startCommandTimer() {
                timerIdCommand = setInterval(function () {
                    reloadCommands();
                }, updateTimerCommand);
            }
            function stopCommandTimer() {
                clearInterval(timerIdCommand);
            }
            // ========================== END Commands


            // ========================== Response

            // configs
            var limitResponseTable = 100;
            var updateTimerResponse = 2000;
            //====

            function reloadResponces() {
                if (lockResponse == false) {
                    lockResponse = true;
                    var query = $.getJSON("/api/Response/Core/GetAllResponses/" + lastResponseId, function (result) {
                        $.each(result, function (i, response) {
                            $('#tbResponses tr:first').after('<tr><td>' + response.Id + '</td><td>' + response.TimeString + '</td><td>' + response.Text + '</td></tr>');
                            if (lastResponseId < response.Id) lastResponseId = response.Id; // I will optimize it, i'm sure...
                            controllResponseList();
                        });
                    })
                    .complete(function () {
                        lockResponse = false;
                    });
                }
            }
            function controllResponseList() {
                summResponcseRecords++;
                if (summResponcseRecords > limitResponseTable) {
                    $('#tbResponses tr').last().remove();
                }
            }
            function startResponseTimer() {
                timerIdResponcse = setInterval(function () {
                    reloadResponces();
                }, updateTimerResponse);
            }
            function stopResponseTimer() {
                clearInterval(timerIdResponcse);
            }
            // ========================== END Response

            $("#btnRefreshResponses").click(function () {
                reloadResponces();
                reloadCommands();
            });

            $("#btnSubmitCommand").click(function () {
                $.ajax({
                    type: "POST",
                    beforeSend: function (request) {
                        request.setRequestHeader("CoreKey", '98sdfhfdJ98jdsfJks2fsSfsdf32');
                    },
                    url: "/api/Command/Core/Post/",
                    data: {
                        Cmd: $("#Cmd").val(),
                        Type: $("#Type").val(),
                        MsExTime: $("#MsExTime").val(),
                        MsDelayAfterExTime: $("#MsDelayAfterExTime").val()
                    },
                    dataType: 'json',
                    success: function (msg) {
                    }
                });
            });


            $(".actionButton").click(function () {
                var vall = $(this).attr("title");
                if (vall != null) {
                    $("#Cmd").val(vall);
                    $("#btnSubmitCommand").click();
                }
            });




            function centeredPopupWindow(url, winName, w, h, scroll) {
                var LeftPosition = (screen.width) ? (screen.width - w) / 2 : 0;
                var TopPosition = (screen.height) ? (screen.height - h) / 2 : 0;
                //var resizable = "yes" ;
                var settings = 'height=' + h + ',width=' + w + ',top=' + TopPosition + ',left=' + LeftPosition + ',scrollbars=' + scroll + ',resizable';
                gPopupWindow = window.open(url, winName, settings);
                // gPopupWindow.style.zIndex="1";
                gPopupWindow.focus();

            }

            $('#myButton').click(function () {
                //window.open("https://my.vuezone.com/Main.aspx");


                var url = "http://www.google.com";


                centeredPopupWindow(url, 'sd', '1024', '700', 'yes');

                //SubpopUpWin = window.open(url, '_blank', 'toolbar=no,status=no,menubar=no,scrollbars=yes,resizable=yes,copyhistory=yes');

                //$('#myFrame').attr('src', "https://my.vuezone.com/Main.aspx");
                //showDialog("test");
                //newwindow = window.open("https://my.vuezone.com/Main.aspx", 'https://my.vuezone.com/Main.aspx', 'height=500,width=550');
                //if (window.focus) {
                //    newwindow.focus();
                //}
                //return false;

            });

            function showDialog(uniqueName) {
                $("#dialog-page").load('http://jaliyaudagedara.blogspot.com').dialog({
                    autoOpen: false,
                    resizable: true,
                    height: 400,
                    width: 600,
                    modal: true
                });

                $('#dialog-page').dialog('open');
                return false;
            }

            startCommandTimer();
            startResponseTimer();


        });
    </script>
    <div id='dialog-page' title="Modal">
    </div>


    Commands:
    <div style="height: 250px; overflow: auto;">
        <table id="tbCommands" border="1">
            <tr>
                <th width="120px;">Command Id</th>
                <th width="200px;">Time</th>
                <th width="250px;">Command</th>
                <th width="80px;">Received? (N/A)</th>
                <th width="100px;">Execution Time</th>
            </tr>
        </table>
    </div>
    <br />
    Responses:
    <div style="height: 250px; overflow: auto;">
        <table id="tbResponses" border="1">
            <tr>
                <th width="120px;">Response Id</th>
                <th width="200px;">Time</th>
                <th width="350px;">Response</th>
                <th>Command</th>
            </tr>
        </table>
    </div>

    <fieldset>
        <legend>Command</legend>
        <table>
            <tr>
                <td>
                    <div class="editor-label">
                        @Html.LabelFor(model => model.Cmd)
                    </div>
                </td>
                <td rowspan="10">
                    <table style="text-align: center">
                        <tr>
                            <td></td>
                            <td>
                                <button title="MoveForvard" class="actionButton">Go Forward</button>
                            </td>
                            <td></td>
                        </tr>
                        <tr>
                            <td><button title="HeadPingL" class="actionButton">Ping Left</button></td>
                            <td>
                                <button title="HeadPing" class="actionButton">Ping</button><br />
                                <button title="HeadLight" class="actionButton">Check light</button>
                            </td>
                            <td><button title="HeadPingR" class="actionButton">Ping Right</button></td>
                        </tr>
                        <tr>
                            <td><button title="MoveLeft" class="actionButton">Go Left</button></td>
                            <td><button title="MoveStop" class="actionButton">Stop</button></td>
                            <td><button title="MoveRight" class="actionButton">Go Right</button></td>
                        </tr>
                        <tr>
                            <td><button title="MoveRightTurn" class="actionButton">U-TurnRight</button></td>
                            <td>
                                <button title="MoveBack" class="actionButton">Go Back</button>
                            </td>
                            <td><button title="MoveLeftTurn" class="actionButton">U-TurnLeft</button></td>
                        </tr>
                        <tr>
                            <td>
                                <button title="MoveForvard" class="actionButton">Moode: Auto</button><br />
                                <button title="MoveForvard" class="actionButton">Moode: Manual</button>
                            <td>
                                <button title="MoveForvard" class="actionButton">Sleep: Doze</button><br />
                                <button title="MoveForvard" class="actionButton">Sleep: Deep</button>
                            </td>
                </td>
                <td></td>
            </tr>
        </table>
        </td>
        </tr>
        <tr>
            <td>
                <div class="editor-field">
                    @Html.EditorFor(model => model.Cmd)
                    @Html.ValidationMessageFor(model => model.Cmd)
                </div>
            </td>
        </tr>
        <tr>
            <td>
                <div class="editor-label">
                    @Html.LabelFor(model => model.Type)
                </div>
            </td>
        </tr>
        <tr>
            <td>
                <div class="editor-field">
                    @Html.EditorFor(model => model.Type)
                    @Html.ValidationMessageFor(model => model.Type)
                </div>
            </td>
        </tr>
        <tr>
            <td>
                <div class="editor-label">
                    @Html.LabelFor(model => model.MsExTime)
                </div>
            </td>
        </tr>
        <tr>
            <td>
                <div class="editor-field">
                    @Html.EditorFor(model => model.MsExTime)
                    @Html.ValidationMessageFor(model => model.MsExTime)
                </div>
            </td>
        </tr>
        <tr>
            <td>
                <div class="editor-label">
                    @Html.LabelFor(model => model.MsDelayAfterExTime)
                </div>
            </td>
        </tr>
        <tr>
            <td>
                <div class="editor-field">
                    @Html.EditorFor(model => model.MsDelayAfterExTime)
                    @Html.ValidationMessageFor(model => model.MsDelayAfterExTime)
                </div>
            </td>
        </tr>
        <tr>
            <td>
                <input type="button" id="btnSubmitCommand" value="Submit Command" />

            </td>
        </tr>
        </table>
    </fieldset>

    <iframe id="myFrame"></iframe>
    <button id="myButton">
        Refresh IFrame
    </button>




</body>
</html>
